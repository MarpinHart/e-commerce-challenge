{"version":3,"sources":["api.js","components/ProductCard.js","components/EmailForm.js","components/CartItem.js","components/ShoppingCart.js","components/ProductList.js","App.js","serviceWorker.js","index.js"],"names":["service","axios","create","baseURL","withCredentials","errHandler","err","console","error","response","data","message","api","get","then","res","catch","email","post","order","ProductCard","_ref","id","title","description","image","price","handleAddCart","react_default","a","createElement","className","src","alt","Button","onClick","EmailForm","handleInputChange","handleCompleteCart","isEmailCorrect","Form","InputGroup","Input","type","name","value","valid","invalid","length","placeholder","onChange","FormFeedback","InputGroupAddon","addonType","CartItem","deleteItemFromCart","index","color","size","e","ShoppingCart","cart","completed","handleCompleteOrder","newPrice","map","shoppedItem","components_CartItem","item","parseFloat","substring","toFixed","toString","components_EmailForm","ProductList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","filter","allItems","cartItems","user","search","total","successful","bind","assertThisInitialized","product","preventDefault","setState","prevState","concat","toConsumableArray","log","event","_this2","defineProperty","target","searchValue","_user","_id","_products","el","i","test","String","toLowerCase","_this3","lowerSearch","components_ShoppingCart","handleSearchInput","includes","components_ProductCard","imageUrl","_this4","Component","App","components_ProductList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16080d2b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:5000/',\n  withCredentials: true\n})\n\nconst errHandler = err => {\n  console.error(err)\n  if (err.response && err.response.data) {\n    console.error(\"API response\", err.response.data)\n    throw err.response.data.message\n  }\n  throw err\n}\n\nexport default {\n  service: service, \n\n  getProductsList(){\n    return service.get('/products')\n      .then(res => res.data)\n      .catch(errHandler)\n  },\n\n  postEmail(email){\n    return service.post('/user', email)\n      .then(res => res)\n      .catch(errHandler)\n  },\n\n  postOrder(order){\n    return service.post('/orders', order)\n      .then(res => res)\n      .catch(errHandler)\n  }\n}","import React from \"react\";\nimport { Button } from \"reactstrap\";\n\nconst ProductCard = ({\n  id,\n  title,\n  description,\n  image,\n  price,\n  handleAddCart\n}) => {\n  return (\n    <div className=\"ProductCard\">\n      <div className=\"card\">\n        <img src={image} className=\"product-image\" alt=\"missing\" />\n        <div className=\"title-description-card\">\n          <h5 className=\"\">{title}</h5>\n          <p className=\"\">{description}</p>\n          <Button className=\"button\" onClick={handleAddCart}>\n            Button\n          </Button>\n        </div>\n        <h2 className=\"price-card\">{price}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React from \"react\";\nimport {\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Button,\n  FormFeedback\n} from \"reactstrap\";\n\nconst EmailForm = ({ email, handleInputChange, handleCompleteCart, isEmailCorrect }) => {\n  return (\n    <div>\n      <Form>\n        <InputGroup>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            valid={isEmailCorrect}\n            invalid={email.length > 0 && !isEmailCorrect}\n            placeholder=\"Insert Email\"\n            onChange={handleInputChange}\n          />\n          <FormFeedback> This is not a valid email </FormFeedback>\n          <InputGroupAddon addonType=\"prepend\">\n            <Button onClick={handleCompleteCart}>Confirm</Button>\n          </InputGroupAddon>\n          <FormFeedback valid />\n        </InputGroup>\n      </Form>\n    </div>\n  );\n};\n\nexport default EmailForm;\n","import React from 'react'\nimport { Button } from 'reactstrap'\n\nconst CartItem = ({ title, price, deleteItemFromCart, index }) => {\n  return (\n    <div className=\"CartItem\">\n      <Button color=\"danger\" size=\"sm\" onClick={e=>deleteItemFromCart(e,index)}>X</Button>\n      <h6>{title}</h6>\n      <h6>{price}</h6>\n    </div>\n  ) \n}\n\nexport default CartItem\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport EmailForm from './EmailForm'\nimport CartItem from './CartItem'\n\nconst ShoppingCart = ({ cart, email, completed, handleCompleteCart, handleCompleteOrder, handleInputChange, isEmailCorrect, deleteItemFromCart}) => {\n  let newPrice = 0\n  return (\n    <div className=\"ShoppingCart\">  \n      <h1>Shopping Cart</h1>\n      <hr/>\n      <div className=\"shopping-list\">\n      {cart.length === 0 && <h6>Please insert products</h6>}\n      {cart.map((shoppedItem, index) => (\n       <CartItem \n        index={index}\n        title={shoppedItem.title}\n        price={shoppedItem.price}\n        deleteItemFromCart={deleteItemFromCart}\n       />\n      ))}\n      </div>\n      <hr/>\n      {cart.map(item => {\n        newPrice += parseFloat(item.price.substring(0, item.price.length-1))\n      })}\n     <h4>Total: {newPrice.toFixed(2).toString()} €</h4>\n      <hr/>\n      <EmailForm \n        email={email}\n        handleInputChange={handleInputChange}\n        handleCompleteCart={handleCompleteCart}\n        isEmailCorrect={isEmailCorrect}\n      />\n      <Button onClick={handleCompleteOrder} className={completed ? 'active complete-button' : 'disabled complete-button'}> Complete Order </Button>\n    </div>\n  );\n};\n\nexport default ShoppingCart;\n","import React, { Component } from \"react\";\nimport api from \"../api\";\nimport ProductCard from \"./ProductCard\";\nimport ShoppingCart from \"./ShoppingCart\";\nimport { Input } from \"reactstrap\";\n\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      allItems: [],\n      cartItems: [],\n      email: \"\",\n      user: {},\n      search: \"\",\n      completed: false,\n      total: \"\",\n      successful: false,\n    };\n    this.deleteItemFromCart = this.deleteItemFromCart.bind(this)\n  }\n  handleAddCart(e, product) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      cartItems: [...prevState.cartItems, product]\n    }));\n    console.log(this.state.cartItems);\n  }\n  handleCompleteCart(event) {\n    event.preventDefault();\n    const { email } = this.state;\n    api.postEmail({ email }).then(res => {\n      this.setState({\n        completed: true,\n        user: res.data\n      });\n    });\n  }\n  handleInputChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  handleSearchInput(searchValue) {\n    this.setState({\n      search: searchValue\n    });\n  }\n  handleCompleteOrder(event) {\n    event.preventDefault();\n    const _user = this.state.user._id;\n    const _products = this.state.cartItems.map(e => e._id);\n    api.postOrder({ _user, _products }).then(res => console.log(res));\n    this.setState({ successful: true })\n  }\n  deleteItemFromCart(event, index){\n    console.log(index)\n    event.preventDefault()\n    this.setState({\n      cartItems: this.state.cartItems.filter((el, i)=> i !== index)\n    })\n  }\n  isEmailCorrect() {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(this.state.email).toLowerCase());\n  }\n  render() {\n    let lowerSearch = this.state.search.toLowerCase();\n    return (\n      <div className=\"ProductList\">\n        <ShoppingCart\n          cart={this.state.cartItems}\n          completed={this.state.completed}\n          email={this.state.email}\n          deleteItemFromCart={this.deleteItemFromCart}\n          handleCompleteCart={e => this.handleCompleteCart(e)}\n          handleCompleteOrder={e => this.handleCompleteOrder(e)}\n          handleInputChange={e => this.handleInputChange(e)}\n          isEmailCorrect={this.isEmailCorrect()}\n        />\n        <div className=\"right-page\">\n          <Input\n            name=\"filter\"\n            placeholder=\"Filter the seach\"\n            value={this.state.search}\n            onChange={e => this.handleSearchInput(e.target.value)}\n          />\n          <div className=\"right-page-scroll\">\n            {this.state.allItems\n              .filter(product =>\n                product.title.toLowerCase().includes(lowerSearch)\n              )\n              .map(product => (\n                <ProductCard\n                  id={product._id}\n                  title={product.title}\n                  description={product.description}\n                  image={product.imageUrl}\n                  price={product.price}\n                  handleAddCart={e => this.handleAddCart(e, product)}\n                />\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  componentDidMount() {\n    api.getProductsList().then(res => {\n      this.setState({\n        allItems: res\n      });\n      console.log(this.state.allItems, \"state\");\n    });\n  }\n}\n\nexport default ProductList;\n","import React from 'react';\nimport './App.css';\nimport ProductList from './components/ProductList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProductList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}